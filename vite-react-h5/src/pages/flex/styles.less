.box1 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    // flex-direction属性决定主轴的方向（即项目的排列方向）
    flex-direction: row; /* 主轴为水平方向，起点在左端 */
    flex-direction: row-reverse; /* 主轴为水平方向，起点在右端 */
    flex-direction: column; /* 主轴为垂直方向，起点在上沿 */
    flex-direction: column-reverse; /* 主轴为垂直方向，起点在下沿 */
    div {
        background: #ccc;
        border: 1px solid #000;
    }
}
.box2 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    // flex-wrap 项目都排在一条线，如果一条轴线排不下，如何换行
    flex-wrap: nowrap; /* 不换行 */
    flex-wrap: wrap; /* 换行，第一行在上方 */
    flex-wrap: wrap-reverse; /* 换行，第一行在下方 */
    div {
        background: #ccc;
        border: 1px solid #000;
    }
}
.box3 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    // flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap
    flex-flow: row nowrap; /* 水平方向，起点左，不换行 */
    flex-flow: row wrap; /* 水平方向，起点左，换行 */
    div {
        background: #ccc;
        border: 1px solid #000;
    }
}
.box4 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    // justify-content属性定义了项目在主轴上的对齐方式
    justify-content: flex-start; /* 左对齐 */
    justify-content: flex-end; /* 右对齐 */
    justify-content: center; /* 居中对齐 */
    justify-content: space-between; /* 两端对齐，项目之间的间隔都相等 */
    justify-content: space-around; /* 每个项目两侧的间隔相等 */
    div {
        background: #ccc;
        border: 1px solid #000;
    }
}
.box5 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    // align-items属性定义项目在交叉轴上如何对齐
    align-items: flex-start; /* 交叉轴的起点对齐 */
    align-items: flex-end; /* 交叉轴的终点对齐 */
    align-items: center; /* 交叉轴的中点对齐 */
    //align-items: baseline; /* 项目的第一行文字的基线对齐 */
    //align-items: stretch; /* 占满整个容器的高度 */
    div {
        background: #ccc;
        border: 1px solid #000;
    }
}
.box6 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    flex-wrap: wrap;
    // align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用
    align-content: flex-start; /* 与交叉轴的起点对齐 */
    align-content: flex-end; /* 与交叉轴的终点对齐 */
    align-content: center; /* 与交叉轴的中点对齐 */
    //align-content: space-between; /* 与交叉轴两端对齐，之间间隔平均分布 */
    //align-content: space-around; /* 两侧的间隔都相等,均分布 */
    //align-content: stretch; /* 轴线占满整个交叉轴 */
    div {
        background: #ccc;
        border: 1px solid #000;
        width: 100px;
    }
}
.box7 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    div {
        background: #ccc;
        border: 1px solid #000;
        width: 100px;
    }
    .one {
        // order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0
        order: 1;
    }
}
.box8 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    div {
        background: #ccc;
        border: 1px solid #000;
        width: 100px;
    }
    /* flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大
	    如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。
        如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。*/
    .one {
        flex-grow: 1;
    }
    .two {
        flex-grow: 2;
    }
}
.box9 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    div {
        background: #ccc;
        border: 1px solid #000;
        width: 100px;
    }
    /* flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
	    如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。
        如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。*/
    .one {
        flex-shrink: 0;
    }
    .two {
        flex-shrink: 1;
    }
    .three {
        flex-shrink: 2;
    }
}
.box10 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    div {
        background: #ccc;
        border: 1px solid #000;
        flex: 1;
    }
    .one {
        // flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选
        flex: 0 0 50px;
    }
}
.box11 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    div {
        background: #ccc;
        border: 1px solid #000;
        align-self: flex-start;
        align-self: flex-end;
        align-self: center;
        align-self: baseline;
        align-self: stretch;
    }
    .one {
        /* align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。
        默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。 */
        align-self: flex-end;
    }
}
// 左固定||百分比, 右自适应
.box12 {
    height: 100px;
    border: 1px solid #f00;
    display: flex;
    div {
        background: #ccc;
        border: 1px solid #000;
        flex: 1;
    }
    .one {
        flex: 0 1 50px;
    }
    .two {
        flex: 0 1 20%;
    }
}
.box13 {
    display: flex;
    min-height: 200px;
    flex-direction: column;
    border: 1px solid #f00;
    header,
    footer {
        flex: 0 0 50px;
        background: #ccc;
    }
    section {
        flex: 1;
        display: flex;
        nav {
            flex: 0 0 100px;
            background: #999;
        }
        main {
            flex: 1;
            background: #333;
        }
        aside {
            flex: 0 0 10%;
            background: #666;
        }
    }
}
.box14 {
    height: 200px;
    border: 1px solid #f00;
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
    gap: 10px; /* 行间距和列间距均为10px */
    gap: 10px 20px; /* 行间距为10px，列间距为20px */
    div {
        background: #ccc;
        width: 150px;
        height: 50px;
        border: 1px solid #000;
    }
}
